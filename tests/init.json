{"state": {"inventory": {"slots": [{"item": "bedrock", "count": 0}, {"item": "door", "count": 0}, {"item": "safe", "count": 0}, {"item": "plastic_chest", "count": 0}, {"item": "tree_tap", "count": 0}, {"item": "oak_log", "count": 0}, {"item": "diamond_ore", "count": 0}, {"item": "iron_pickaxe", "count": 1}, {"item": "crafting_table", "count": 0}, {"item": "block_of_platinum", "count": 0}, {"item": "block_of_titanium", "count": 0}, {"item": "sapling", "count": 0}, {"item": "planks", "count": 0}, {"item": "stick", "count": 0}, {"item": "diamond", "count": 0}, {"item": "block_of_diamond", "count": 0}, {"item": "rubber", "count": 0}, {"item": "pogo_stick", "count": 0}, {"item": "blue_key", "count": 0}], "selectedItem": "air"}, "player": {"pos": [25, 25], "facing": "north"}, "map": {"0,0": "bedrock", "1,0": "bedrock", "2,0": "bedrock", "3,0": "bedrock", "4,0": "bedrock", "5,0": "bedrock", "6,0": "bedrock", "7,0": "bedrock", "8,0": "bedrock", "9,0": "bedrock", "10,0": "bedrock", "11,0": "bedrock", "12,0": "bedrock", "13,0": "bedrock", "14,0": "bedrock", "15,0": "bedrock", "16,0": "bedrock", "17,0": "bedrock", "18,0": "bedrock", "19,0": "bedrock", "20,0": "bedrock", "21,0": "bedrock", "22,0": "bedrock", "23,0": "bedrock", "24,0": "bedrock", "25,0": "bedrock", "26,0": "bedrock", "27,0": "bedrock", "28,0": "bedrock", "29,0": "bedrock", "30,0": "bedrock", "31,0": "bedrock", "0,1": "bedrock", "31,1": "bedrock", "0,2": "bedrock", "31,2": "bedrock", "0,3": "bedrock", "31,3": "bedrock", "0,4": "bedrock", "26,4": "oak_log", "31,4": "bedrock", "0,5": "bedrock", "31,5": "bedrock", "0,6": "bedrock", "31,6": "bedrock", "0,7": "bedrock", "1,7": "diamond_ore", "2,7": "diamond_ore", "31,7": "bedrock", "0,8": "bedrock", "1,8": "diamond_ore", "2,8": "diamond_ore", "27,8": "oak_log", "31,8": "door", "0,9": "bedrock", "31,9": "bedrock", "0,10": "bedrock", "31,10": "bedrock", "0,11": "bedrock", "31,11": "bedrock", "0,12": "bedrock", "31,12": "bedrock", "0,13": "bedrock", "19,13": "oak_log", "28,13": "block_of_platinum", "29,13": "block_of_platinum", "31,13": "bedrock", "0,14": "bedrock", "28,14": "block_of_platinum", "29,14": "block_of_platinum", "31,14": "bedrock", "0,15": "bedrock", "31,15": "bedrock", "0,16": "bedrock", "31,16": "bedrock", "0,17": "bedrock", "31,17": "bedrock", "0,18": "bedrock", "31,18": "bedrock", "0,19": "bedrock", "6,19": "oak_log", "31,19": "bedrock", "0,20": "bedrock", "6,20": "oak_log", "31,20": "bedrock", "0,21": "bedrock", "7,21": "plastic_chest", "29,21": "crafting_table", "31,21": "bedrock", "0,22": "bedrock", "31,22": "bedrock", "0,23": "bedrock", "31,23": "bedrock", "0,24": "bedrock", "31,24": "bedrock", "0,25": "bedrock", "31,25": "bedrock", "0,26": "bedrock", "31,26": "bedrock", "0,27": "bedrock", "31,27": "bedrock", "0,28": "bedrock", "31,28": "bedrock", "0,29": "bedrock", "31,29": "door", "0,30": "bedrock", "31,30": "bedrock", "0,31": "bedrock", "1,31": "bedrock", "2,31": "bedrock", "3,31": "bedrock", "4,31": "bedrock", "5,31": "bedrock", "6,31": "bedrock", "7,31": "bedrock", "8,31": "bedrock", "9,31": "bedrock", "10,31": "bedrock", "11,31": "bedrock", "12,31": "bedrock", "13,31": "bedrock", "14,31": "bedrock", "15,31": "bedrock", "16,31": "bedrock", "17,31": "bedrock", "18,31": "bedrock", "19,31": "bedrock", "20,31": "bedrock", "21,31": "bedrock", "22,31": "bedrock", "23,31": "bedrock", "24,31": "bedrock", "25,31": "bedrock", "26,31": "bedrock", "27,31": "bedrock", "28,31": "bedrock", "29,31": "bedrock", "30,31": "bedrock", "31,31": "bedrock"}, "action": "(break oak_log)", "actionSuccess": false, "failedAction": "(break oak_log)"}, "domain": ";Header and description\n\n(define (domain polycraft_generated)\n\n;remove requirements that are not needed\n(:requirements :typing :strips :fluents :negative-preconditions :equality)\n\n(:types ;todo: enumerate types and their hierarchy here, e.g. car truck bus - vehicle\n    pickaxe_breakable - breakable\n    hand_breakable - pickaxe_breakable\n    breakable - placeable\n    placeable - physobj\n    physobj - physical\n    actor - physobj\n    trader - actor\n    pogoist - actor\n    agent - actor\n    oak_log - log\n    distance - var\n    bedrock - placeable\n    door - placeable\n    safe - placeable\n    plastic_chest - placeable\n    tree_tap - placeable\n    oak_log - hand_breakable\n    diamond_ore - pickaxe_breakable\n    iron_pickaxe - physobj\n    crafting_table - hand_breakable\n    block_of_platinum - pickaxe_breakable\n    block_of_titanium - placeable\n    sapling - placeable\n    planks - physobj\n    stick - physobj\n    diamond - physobj\n    block_of_diamond - physobj\n    rubber - physobj\n    pogo_stick - physobj\n    blue_key - physobj\n)\n\n(:constants \n    air - physobj\n    one - distance\n    two - distance\n    rubber - physobj\n    blue_key - physobj\n)\n\n(:predicates ;todo: define predicates here\n    (holding ?v0 - physobj)\n    (floating ?v0 - physobj)\n    (facing_obj ?v0 - physobj ?d - distance)\n    (next_to ?v0 - physobj ?v1 - physobj)\n)\n\n\n(:functions ;todo: define numeric functions here\n    (world ?v0 - physobj)\n    (inventory ?v0 - physobj)\n    (container ?v0 - physobj ?v1 - physobj)\n)\n\n; define actions here\n(:action approach\n    :parameters    (?physobj01 - physobj ?physobj02 - physobj )\n    :precondition  (and\n        (>= ( world ?physobj02) 1)\n        (facing_obj ?physobj01 one)\n    )\n    :effect  (and\n        (facing_obj ?physobj02 one)\n        (not (facing_obj ?physobj01 one))\n    )\n)\n\n(:action approach_actor\n    :parameters    (?physobj01 - physobj ?physobj02 - actor )\n    :precondition  (and\n        (facing_obj ?physobj01 one)\n    )\n    :effect  (and\n        (facing_obj ?physobj02 one)\n        (not (facing_obj ?physobj01 one))\n    )\n)\n\n(:action break\n    :parameters    (?physobj - hand_breakable)\n    :precondition  (and\n        (facing_obj ?physobj one)\n        (not (floating ?physobj))\n    )\n    :effect  (and\n        (facing_obj air one)\n        (not (facing_obj ?physobj one))\n        (increase ( inventory ?physobj) 1)\n        (increase ( world air) 1)\n        (decrease ( world ?physobj) 1)\n    )\n)\n\n\n(:action break_holding_iron_pickaxe\n    :parameters    (?physobj - pickaxe_breakable ?iron_pickaxe - iron_pickaxe)\n    :precondition  (and\n        (facing_obj ?physobj one)\n        (not (floating ?physobj))\n        (holding ?iron_pickaxe)\n    )\n    :effect  (and\n        (facing_obj air one)\n        (not (facing_obj ?physobj one))\n        (increase ( inventory ?physobj) 1)\n        (increase ( world air) 1)\n        (decrease ( world ?physobj) 1)\n    )\n)\n\n(:action break_diamond_ore\n    :parameters    (?iron_pickaxe - iron_pickaxe)\n    :precondition  (and\n        (facing_obj diamond_ore one)\n        (not (floating diamond_ore))\n        (holding ?iron_pickaxe)\n    )\n    :effect  (and\n        (facing_obj air one)\n        (not (facing_obj diamond_ore one))\n        (increase ( inventory diamond) 9)\n        (increase ( world air) 1)\n        (decrease ( world diamond_ore) 1)\n    )\n)\n\n(:action select\n    :parameters    (?prev_holding - physobj ?obj_to_select - physobj)\n    :precondition  (and\n        (>= ( inventory ?obj_to_select) 1)\n        (holding ?prev_holding)\n        (not (= ?obj_to_select air))\n    )\n    :effect  (and\n        (holding ?obj_to_select)\n        (not (holding ?prev_holding))\n    )\n)\n\n(:action deselect_item\n    :parameters    (?physobj01 - physobj)\n    :precondition  (and\n        (holding ?physobj01)\n        (not (holding air))\n    )\n    :effect  (and\n        (not (holding ?physobj01))\n        (holding air)\n    )\n)\n\n(:action place\n    :parameters   (?physobj01 - placeable)\n    :precondition (and\n        (facing_obj air one)\n        (holding ?physobj01)\n    )\n    :effect (and \n        (facing_obj ?physobj01 one)\n        (not (facing_obj air one))\n        (increase ( world ?physobj01) 1)\n        (decrease ( inventory ?physobj01) 1)\n    )\n)\n\n(:action collect_from_tree_tap\n    :parameters (?actor - actor ?log - log)\n\n    :precondition (and\n        (holding tree_tap)\n        (facing_obj ?log one)\n    )\n    :effect (and\n        (increase ( inventory rubber) 1)\n    )\n)\n\n;; not working\n(:action collect_from_safe\n    :parameters (?actor - actor ?safe - safe)\n\n    :precondition (and\n        (facing_obj ?safe one)\n        (holding blue_key)\n        (>= (container ?safe diamond) 18)\n    )\n    :effect (and\n        (decrease (container ?safe diamond) 18)\n        (increase (inventory diamond) 18)\n    )\n)\n\n;; not working\n(:action collect_from_chest\n    :parameters (?actor - actor ?chest - plastic_chest)\n    :precondition (and \n        (facing_obj ?chest one)\n        (>= (container ?chest blue_key) 1)\n    )\n    :effect (and\n        (increase (inventory blue_key) 1)\n        (decrease (container ?chest blue_key) 1)\n    )\n)\n\n\n; TODO collect from safe\n; (:action collect_from_safe\n;     :parameters (?actor - actor ?safe - safe)\n\n;     :precondition (and\n;         (facing_obj_obj ?actor ?safe one)\n;         (holding key)\n;         (= (container ?safe diamond) 18)\n;     )\n;     :effect (and\n;         (decrease (container ?safe diamond) 18)\n;         (increase (inventory ?actor diamond) 18)\n;     )\n; )\n\n; additional actions, including craft and trade\n(:action craft_stick\n    :parameters ()\n    :precondition (and\n        (>= ( inventory planks) 2)\n    )\n    :effect (and\n        (decrease ( inventory planks) 2)\n        (increase ( inventory stick) 4)\n    )\n)\n\n\n(:action craft_planks\n    :parameters ()\n    :precondition (and\n        (>= ( inventory oak_log) 1)\n    )\n    :effect (and\n        (decrease ( inventory oak_log) 1)\n        (increase ( inventory planks) 4)\n    )\n)\n\n\n(:action craft_block_of_diamond\n    :parameters ()\n    :precondition (and\n        (facing_obj crafting_table one)\n        (>= ( inventory diamond) 9)\n    )\n    :effect (and\n        (decrease ( inventory diamond) 9)\n        (increase ( inventory block_of_diamond) 1)\n    )\n)\n\n\n(:action craft_tree_tap\n    :parameters ()\n    :precondition (and\n        (facing_obj crafting_table one)\n        (>= ( inventory planks) 5)\n        (>= ( inventory stick) 1)\n    )\n    :effect (and\n        (decrease ( inventory planks) 5)\n        (decrease ( inventory stick) 1)\n        (increase ( inventory tree_tap) 1)\n    )\n)\n\n\n(:action craft_pogo_stick\n    :parameters ()\n    :precondition (and\n        (facing_obj crafting_table one)\n        (>= ( inventory stick) 2)\n        (>= ( inventory block_of_titanium) 2)\n        (>= ( inventory block_of_diamond) 2)\n        (>= ( inventory rubber) 1)\n    )\n    :effect (and\n        (decrease ( inventory stick) 2)\n        (decrease ( inventory block_of_titanium) 2)\n        (decrease ( inventory block_of_diamond) 2)\n        (decrease ( inventory rubber) 1)\n        (increase ( inventory pogo_stick) 1)\n    )\n)\n\n\n(:action trade_block_of_titanium_1\n    :parameters ()\n    :precondition (and\n        (facing_obj entity_103 one)\n        (>= ( inventory block_of_platinum) 1)\n    )\n    :effect (and\n        (decrease ( inventory block_of_platinum) 1)\n        (increase ( inventory block_of_titanium) 1)\n    )\n)\n\n\n(:action trade_block_of_platinum_1\n    :parameters ()\n    :precondition (and\n        (facing_obj entity_103 one)\n        (>= ( inventory diamond) 18)\n    )\n    :effect (and\n        (decrease ( inventory diamond) 18)\n        (increase ( inventory block_of_platinum) 1)\n    )\n)\n\n\n(:action trade_diamond_1\n    :parameters ()\n    :precondition (and\n        (facing_obj entity_104 one)\n        (>= ( inventory block_of_platinum) 2)\n    )\n    :effect (and\n        (decrease ( inventory block_of_platinum) 2)\n        (increase ( inventory diamond) 9)\n    )\n)\n\n\n(:action trade_block_of_titanium_2\n    :parameters ()\n    :precondition (and\n        (facing_obj entity_104 one)\n        (>= ( inventory oak_log) 10)\n    )\n    :effect (and\n        (decrease ( inventory oak_log) 10)\n        (increase ( inventory block_of_titanium) 2)\n    )\n)\n\n)\n", "plan": "(approach air block_of_platinum)\n(select air iron_pickaxe)\n(break_holding_iron_pickaxe block_of_platinum iron_pickaxe)\n(approach air diamond_ore)\n(break_diamond_ore iron_pickaxe)\n(approach_actor air entity_103)\n(deselect_item iron_pickaxe)\n(approach entity_103 oak_log)\n(break oak_log)\n(approach_actor air entity_103)\n(approach entity_103 oak_log)\n(craft_planks)\n(craft_stick)\n(break oak_log)\n(approach_actor air entity_103)\n(craft_planks)\n(approach entity_103 crafting_table)\n(craft_tree_tap)\n(select air tree_tap)\n(approach crafting_table oak_log)\n(collect_from_tree_tap entity_102 oak_log)\n(approach_actor oak_log entity_103)\n(trade_block_of_titanium_1)\n(approach entity_103 block_of_platinum)\n(select tree_tap iron_pickaxe)\n(break_holding_iron_pickaxe block_of_platinum iron_pickaxe)\n(approach_actor air entity_103)\n(trade_block_of_titanium_1)\n(approach entity_103 crafting_table)\n(craft_block_of_diamond)\n(approach crafting_table diamond_ore)\n(break_diamond_ore iron_pickaxe)\n(approach air crafting_table)\n(craft_block_of_diamond)\n(craft_pogo_stick)", "novelActions": [], "actionSet": ["use", "collect", "break_block", "approach_bedrock", "approach_door", "approach_safe", "approach_plastic_chest", "approach_tree_tap", "approach_oak_log", "approach_diamond_ore", "approach_crafting_table", "approach_block_of_platinum", "approach_block_of_titanium", "approach_sapling", "approach_entity_0", "approach_entity_103", "approach_entity_104", "approach_entity_102", "approach_103", "interact_102", "interact_103", "interact_104", "select_oak_log", "select_iron_pickaxe", "select_sapling", "select_tree_tap", "deselect_item", "craft_stick", "craft_planks", "craft_block_of_diamond", "craft_tree_tap", "craft_pogo_stick", "trade_block_of_titanium_1", "trade_block_of_platinum_1", "trade_diamond_1", "trade_block_of_titanium_2", "place", "nop", "give_up"]}